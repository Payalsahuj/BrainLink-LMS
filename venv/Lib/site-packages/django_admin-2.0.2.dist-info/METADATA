Metadata-Version: 2.1
Name: django-admin
Version: 2.0.2
Summary: Django Admin Extensions
Home-page: https://github.com/django-xxx/django-admin
Author: Hackathon
Author-email: kimi.huang@brightcells.com
Keywords: Django Admin Extensions
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Office/Business :: Financial :: Spreadsheet
Description-Content-Type: text/markdown
Requires-Dist: django-excel-response2 (>=3.0.0)
Requires-Dist: django-six

# django-admin
Django Admin Extensions

## Installation
```shell
pip install django-admin
```

## Usage
* Disable Action
  ```python
  from django.contrib import admin
  from django_admin import DeleteModelAdmin

  # Override ``delete_selected``, call ``delete_model`` for each when ``delete_selected``
  class XXXAdmin(admin.ModelAdmin, DeleteModelAdmin):
      def delete_model(self, request, obj):
          obj.delete()
          # Other Codes

  # Reopen action ``delete_selected`` after ``admin.site.disable_action('delete_selected')``
  class YYYAdmin(admin.ModelAdmin):
      actions = ['delete_selected']

  # Disable ``actions``
  class ZZZAdmin(admin.ModelAdmin):
      actions = None
  ```
* Export Excel
  ```python
  from django.contrib import admin
  from django_admin import ExportExcelModelAdmin, AdvancedExportExcelModelAdmin

  class XXXAdmin(ExportExcelModelAdmin, admin.ModelAdmin):
      pass

  class YYYAdmin(AdvancedExportExcelModelAdmin, admin.ModelAdmin):
      excel_headers = ()
      excel_fields = ()
      excel_fields_exclude = ()
      extra_excel_fields = ()

      def add_extra_excel_fields(self, request, query):
          return []
  ```
* All Fields Readonly
  ```python
  from django.contrib import admin
  from django_admin import ReadonlyModelAdmin, Readonly2ModelAdmin

  class XXXAdmin(ReadonlyModelAdmin, admin.ModelAdmin):
      """ Readonly for Update. """
      pass

  class XXXAdmin(Readonlyï¼’ModelAdmin, admin.ModelAdmin):
      """ Readonly for Add/Update. """
      pass
  ```
* Disable Editing
  ```python
  from django.contrib import admin
  from django_admin import ReadOnlyModelAdmin

  class XXXAdmin(ReadOnlyModelAdmin, admin.ModelAdmin):
      pass
  ```
  * Should add ``django_admin`` in ``INSTALLED_APPS``
    ```python
    INSTALLED_APPS = [
        ...
        'django_admin',
        ...
    ]
    ```
* Disable Add/Delete
  ```python
  from django.contrib import admin
  from django_admin import ChangeOnlyModelAdmin

  class XXXAdmin(ChangeOnlyModelAdmin, admin.ModelAdmin):
      pass
  ```
* Disable Add/Change
  ```python
  from django.contrib import admin
  from django_admin import DeleteOnlyModelAdmin, DeleteonlyModelAdmin

  class XXXAdmin(DeleteOnlyModelAdmin, admin.ModelAdmin):
      # DeleteOnlyModelAdmin - All Fields Default Readonly
      # DeleteonlyModelAdmin - All Fields Not Default Readonly
      pass
  ```
  * Should add ``django_admin`` in ``INSTALLED_APPS``
    ```python
    INSTALLED_APPS = [
        ...
        'django_admin',
        ...
    ]
    ```
* Disable Delete/Change
  ```python
  from django.contrib import admin
  from django_admin import AddOnlyModelAdmin

  class XXXAdmin(AddOnlyModelAdmin, admin.ModelAdmin):
      pass
  ```
  * Should add ``django_admin`` in ``INSTALLED_APPS``
    ```python
    INSTALLED_APPS = [
        ...
        'django_admin',
        ...
    ]
    ```

## Disadvantage
* Will disable ``delete_selected`` for all ``ModelAdmin``
* Will lost delete confirm
